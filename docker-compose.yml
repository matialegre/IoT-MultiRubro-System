version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend_api
      dockerfile: Dockerfile
    container_name: iot-backend
    ports:
      - "8000:8000"
    environment:
      - SIM_MODE=True
      - DATABASE_URL=sqlite:///./iot_multirubro.db
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ./backend_api:/app
      - ./simulator:/app/simulator
      - backend-data:/app/data
    restart: unless-stopped
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (served by backend)
  # Alternatively, use nginx for static files
  
  # Optional: MQTT Broker (for real hardware mode)
  mqtt:
    image: eclipse-mosquitto:2
    container_name: iot-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - mqtt-data:/mosquitto/data
      - mqtt-logs:/mosquitto/log
    restart: unless-stopped
    networks:
      - iot-network
    profiles:
      - hardware

  # Optional: Database (PostgreSQL for production)
  database:
    image: postgres:15-alpine
    container_name: iot-database
    environment:
      - POSTGRES_USER=iot_user
      - POSTGRES_PASSWORD=iot_password
      - POSTGRES_DB=iot_multirubro
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - iot-network
    profiles:
      - production

  # Optional: Grafana for advanced visualization
  grafana:
    image: grafana/grafana:latest
    container_name: iot-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - iot-network
    profiles:
      - monitoring

networks:
  iot-network:
    driver: bridge

volumes:
  backend-data:
  mqtt-data:
  mqtt-logs:
  postgres-data:
  grafana-data:
